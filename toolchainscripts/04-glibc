#!/bin/bash -e

source $(dirname $0)/functions
source $(dirname $0)/pkgversion

filename=$(echo $0 | rev | cut -d / -f1 | rev)

TMP=${TMP:-/tmp/build}
LOG=${LOG:-$(dirname $0)/log}
SRC=${SRC:-$(dirname $0)/src}

NAME=glibc
VERSION=${GLIBC_VER}

fetch "http://ftp.gnu.org/gnu/glibc/glibc-$GLIBC_VER.tar.xz" $SRC

[ "$1" = "fetch" ] && exit 0

rm -fr $TMP
mkdir -p $TMP $LOG $SRC

tar xf $SRC/$tarballname -C $TMP

{ time \
   {

	cd $TMP/$NAME-$VERSION

	mkdir -v build32
	cd       build32
	
	echo slibdir=/tools/lib32 > configparms
	../configure                             \
		  --prefix=/tools                    \
		  --host=$LFS_TGT32                  \
		  --build=$(../scripts/config.guess) \
		  --libdir=/tools/lib32              \
		  --enable-kernel=3.2                \
		  --enable-add-ons                   \
		  --with-headers=/tools/include      \
		  libc_cv_forced_unwind=yes          \
		  libc_cv_c_cleanup=yes              \
		  CC="$LFS_TGT-gcc -m32"             \
		  CXX="$LFS_TGT-g++ -m32"
	make
	make install

	mkdir -v ../build
	cd       ../build
	
	../configure                             \
		  --prefix=/tools                    \
		  --host=$LFS_TGT                    \
		  --build=$(../scripts/config.guess) \
		  --enable-kernel=3.2             \
		  --with-headers=/tools/include      \
		  libc_cv_forced_unwind=yes          \
		  libc_cv_c_cleanup=yes
	make
	make install
	
	echo 'int main(){}' > dummy.c
	$LFS_TGT-gcc -m32 dummy.c
	readelf -l a.out | grep ': /tools'
	$LFS_TGT-gcc dummy.c
	readelf -l a.out | grep ': /tools'
	rm -v dummy.c a.out
	
	}
} 2>&1 | tee $LOG/$filename.log
    
[ $PIPESTATUS = 0 ] && echo "$NAME-$VERSION" > /tools/$filename || exit $PIPESTATUS

rm -fr $TMP
