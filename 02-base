#!/bin/bash

#scratch sync

PKG=(
linux-api-headers
man-pages
glibc
tzdata
zlib
file
readline
m4
bc
binutils
gmp
mpfr
libmpc
shadow
gcc
bzip2
pkg-config
ncurses
attr
acl
libcap
sed
psmisc
iana-etc
bison
flex
grep
bash
libtool
gdbm
gperf
expat
inetutils
perl
perl-xml-parser
intltool
autoconf
automake
xz
kmod
gettext
elfutils
libffi
python3
procps-ng
coreutils
diffutils
gawk
findutils
groff
grub
less
gzip
iproute2
kbd
libpipeline
make
patch
man-db
tar
texinfo
vim
procps-ng
util-linux
e2fsprogs
sysklogd
sysvinit
eudev
filesystem
base
)

EXTRAPKG=(scratchpkg)

adjustingtoolchain() {
	echo "Adjusting toolchain"
	mv -v /tools/bin/{ld,ld-old}
	mv -v /tools/$(uname -m)-pc-linux-gnu/bin/{ld,ld-old}
	mv -v /tools/bin/{ld-new,ld}
	ln -sv /tools/bin/ld /tools/$(uname -m)-pc-linux-gnu/bin/ld

	gcc -dumpspecs | sed -e 's@/tools@@g'                   \
		-e '/\*startfile_prefix_spec:/{n;s@.*@/usr/lib/ @}' \
		-e '/\*cpp:/{n;s@$@ -isystem /usr/include@}' >      \
		`dirname $(gcc --print-libgcc-file-name)`/specs

	echo 'int main(){}' > dummy.c
	cc dummy.c -v -Wl,--verbose &> dummy.log
	readelf -l a.out | grep ': /lib'

	grep -o '/usr/lib.*/crt[1in].*succeeded' dummy.log
	grep -B1 '^ /usr/include' dummy.log
	grep 'SEARCH.*/usr/lib' dummy.log |sed 's|; |\n|g'
	grep "/lib.*/libc.so.6 " dummy.log
	grep found dummy.log
	rm -v dummy.c a.out dummy.log
	sleep 5
}

mount_pseudofs() {
	mount --bind /dev $LFS/dev
	mount -t devpts devpts $LFS/dev/pts -o gid=5,mode=620
	mount -t proc proc $LFS/proc
	mount -t sysfs sysfs $LFS/sys
	mount -t tmpfs tmpfs $LFS/run
}

umount_pseudofs() {
	umount $LFS/dev/pts
	umount $LFS/dev
	umount $LFS/run
	umount $LFS/proc
	umount $LFS/sys
}

runinchroot() {
	pushd $LFS &>/dev/null

	mount_pseudofs

	if [ -h $LFS/dev/shm ]; then
	  mkdir -p $LFS/$(readlink $LFS/dev/shm)
	fi

	cp -L /etc/resolv.conf $LFS/etc

	chroot "$LFS" /tools/bin/env -i \
	HOME=/root \
	TERM="$TERM" \
	PS1='\u:\w\$ ' \
	PATH=/bin:/usr/bin:/sbin:/usr/sbin:/tools/bin $@

	retval=$?

	popd &>/dev/null

	umount_pseudofs
	
	return $retval
}

createdir() {	

	mkdir -pv $LFS/{dev,proc,sys,run}

	mknod -m 600 $LFS/dev/console c 5 1 || true
	mknod -m 666 $LFS/dev/null c 1 3 || true

	install -dv -m 0750 $LFS/root
	install -dv -m 1777 $LFS/tmp $LFS/var/tmp

	mkdir -pv $LFS/bin
	mkdir -pv $LFS/usr/{bin,lib}
	ln -sv /tools/bin/{bash,cat,dd,echo,ln,pwd,rm,stty} $LFS/bin
	ln -sv /tools/bin/{env,install,perl} $LFS/usr/bin
	ln -sv /tools/lib/libgcc_s.so{,.1} $LFS/usr/lib
	ln -sv /tools/lib/libstdc++.{a,so{,.6}} $LFS/usr/lib
	ln -sv bash $LFS/bin/sh

	mkdir -pv $LFS/etc
	ln -sv /proc/self/mounts $LFS/etc/mtab
	#echo "nameserver 8.8.8.8" > $LFS/etc/resolv.conf

	cat > $LFS/etc/passwd << "EOF"
root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/dev/null:/bin/false
daemon:x:6:6:Daemon User:/dev/null:/bin/false
messagebus:x:18:18:D-Bus Message Daemon User:/var/run/dbus:/bin/false
nobody:x:99:99:Unprivileged User:/dev/null:/bin/false
EOF

	cat > $LFS/etc/group << "EOF"
root:x:0:
bin:x:1:daemon
sys:x:2:
kmem:x:3:
tape:x:4:
tty:x:5:
daemon:x:6:
floppy:x:7:
disk:x:8:
lp:x:9:
dialout:x:10:
audio:x:11:
video:x:12:
utmp:x:13:
usb:x:14:
cdrom:x:15:
adm:x:16:
messagebus:x:18:
input:x:24:
mail:x:34:
kvm:x:61:
wheel:x:97:
nogroup:x:99:
users:x:999:
EOF

}

abort() {
	umount_pseudofs
	exit ${1:-0}
}

if [ "$UID" != "0" ]; then
	echo "Chroot need root access!"
	exit 1
fi

trap "abort 1" SIGHUP SIGINT SIGQUIT SIGTERM

LFS=/mnt/lfs

INDEX_DIR="$LFS/var/lib/scratchpkg/index"

if [ ! -d $LFS ]; then
	echo "Dir '$LFS' not exist"
	exit 1
elif [ ! -L /tools ]; then
	echo "Please create symlink '/tools' to '$LFS/tools'"
	exit 1
elif [ $(readlink /tools) != "$LFS/tools" ]; then
	echo "'/tools' not symlink to '$LFS/tools'"
	exit 1
fi

if [ ! -e $LFS/proc/self/mounts ]; then
	createdir
fi

mkdir -p $LFS/var/lib/scratchpkg/index $LFS/var/cache/scratchpkg/{packages,sources}

runinchroot scratch sync || abort 1

for i in ${PKG[@]}; do
	if [[ -f "$INDEX_DIR/$i/.pkginfo" ]]; then
		echo "$i is installed"
	else
		echo
		echo "Installing $i..."
		case $i in
			glibc)
				ln -sfv /tools/lib/gcc $LFS/usr/lib || abort 1
				runinchroot scratch build $i || abort 1
				runinchroot scratch install -d --no-confirm $i || abort 1
				cat > $LFS/tmp/adjusttoolchain << "EOF"
#!/bin/bash
echo "Adjusting toolchain"
mv -v /tools/bin/{ld,ld-old}
mv -v /tools/$(uname -m)-pc-linux-gnu/bin/{ld,ld-old}
mv -v /tools/bin/{ld-new,ld}
ln -sv /tools/bin/ld /tools/$(uname -m)-pc-linux-gnu/bin/ld

gcc -dumpspecs | sed -e 's@/tools@@g'                   \
	-e '/\*startfile_prefix_spec:/{n;s@.*@/usr/lib/ @}' \
	-e '/\*cpp:/{n;s@$@ -isystem /usr/include@}' >      \
	`dirname $(gcc --print-libgcc-file-name)`/specs

echo 'int main(){}' > dummy.c
cc dummy.c -v -Wl,--verbose &> dummy.log
readelf -l a.out | grep ': /lib'

grep -o '/usr/lib.*/crt[1in].*succeeded' dummy.log
grep -B1 '^ /usr/include' dummy.log
grep 'SEARCH.*/usr/lib' dummy.log |sed 's|; |\n|g'
grep "/lib.*/libc.so.6 " dummy.log
grep found dummy.log
rm -v dummy.c a.out dummy.log
sleep 5
EOF
				chmod +x $LFS/tmp/adjusttoolchain || abort 1
				runinchroot /tmp/adjusttoolchain || abort 1
				rm $LFS/tmp/adjusttoolchain || abort 1
				rm $LFS/usr/lib/gcc || abort 1
				;;
			bc)
				ln -sfv /tools/lib/libncursesw.so.6 $LFS/usr/lib/libncursesw.so.6 || abort 1
				ln -sfv libncurses.so.6 $LFS/usr/lib/libncurses.so || abort 1
				runinchroot scratch build $i || abort 1
				runinchroot scratch install -d --no-confirm $i || abort 1
				rm $LFS/usr/lib/{libncurses.so,libncursesw.so.6} || abort 1
				;;
			gcc)
				runinchroot scratch build $i || abort 1
				rm -f $LFS/usr/lib/{libgcc_s.so{,.1},libstdc++.{a,so{,.6}}} || abort 1
				scratch install -d --no-confirm $i || abort 1
				;;
			bash|coreutils|filesystem|scratchpkg)
				# scratchpkg is hardly depends on bash and coreutils
				# so, ignore conflict, mean just replacing the files
				runinchroot scratch build $i || abort 1
				runinchroot scratch install -dc --no-confirm $i || abort 1
				;;
			perl)
				echo "127.0.0.1 localhost $(hostname)" > $LFS/etc/hosts || abort 1
				runinchroot scratch build $i || abort 1
				rm $LFS/etc/hosts || abort 1
				rm $LFS/usr/bin/perl || abort 1
				runinchroot scratch install -d --no-confirm $i || abort 1
				;;
			*)
				runinchroot scratch install -d --no-confirm $i || abort 1
				;;
		esac
		echo ":: $i installed"
	fi
done

# install the scratchpkg
#runinchroot scratch install --no-confirm wget httpup libarchive
#runinchroot scratch install -c --no-confirm scratchpkg

runinchroot scratch install --no-confirm ${EXTRAPKG[@]} || abort 1
